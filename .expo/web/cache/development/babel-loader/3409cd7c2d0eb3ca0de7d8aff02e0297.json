{"ast":null,"code":"'use strict';\n\nimport moment from 'moment';\nvar defaultRules = {\n  numbers: /^(([0-9]*)|(([0-9]*)\\.([0-9]*)))$/,\n  email: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n  required: /\\S+/,\n  hasNumber: /\\d/,\n  hasUpperCase: /(?=.*[A-Z])/,\n  hasLowerCase: /(?=.*[a-z])/,\n  hasSpecialCharacter: /(\\W)/,\n  date: function date() {\n    var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"YYYY-MM-DD\";\n    var value = arguments.length > 1 ? arguments[1] : undefined;\n    var d = moment(value, format);\n    if (d == null || !d.isValid()) return false;\n    return true;\n  },\n  minlength: function minlength(length, value) {\n    if (length === void 0) {\n      throw 'ERROR: It is not a valid length, checkout your minlength settings.';\n    } else if (value.length >= length) {\n      return true;\n    }\n\n    return false;\n  },\n  maxlength: function maxlength(length, value) {\n    if (length === void 0) {\n      throw 'ERROR: It is not a valid length, checkout your maxlength settings.';\n    } else if (value.length > length) {\n      return false;\n    }\n\n    return true;\n  },\n  equalPassword: function equalPassword(dataToCompare, value) {\n    return dataToCompare === value;\n  }\n};\nexport default defaultRules;","map":{"version":3,"sources":["/Users/tejasoberoi/Desktop/class-51-Reference-Code/node_modules/react-native-form-validator/defaultRules.js"],"names":["moment","defaultRules","numbers","email","required","hasNumber","hasUpperCase","hasLowerCase","hasSpecialCharacter","date","format","value","d","isValid","minlength","length","maxlength","equalPassword","dataToCompare"],"mappings":"AAAA;;AAEA,OAAOA,MAAP,MAAmB,QAAnB;AAGA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,mCADU;AAEnBC,EAAAA,KAAK,EAAE,yJAFY;AAGnBC,EAAAA,QAAQ,EAAE,KAHS;AAInBC,EAAAA,SAAS,EAAE,IAJQ;AAKnBC,EAAAA,YAAY,EAAE,aALK;AAMnBC,EAAAA,YAAY,EAAE,aANK;AAOnBC,EAAAA,mBAAmB,EAAE,MAPF;AAQnBC,EAAAA,IARmB,kBAQgB;AAAA,QAA9BC,MAA8B,uEAArB,YAAqB;AAAA,QAAPC,KAAO;AACjC,QAAMC,CAAC,GAAGZ,MAAM,CAACW,KAAD,EAAQD,MAAR,CAAhB;AACA,QAAIE,CAAC,IAAI,IAAL,IAAa,CAACA,CAAC,CAACC,OAAF,EAAlB,EAA+B,OAAO,KAAP;AAC/B,WAAO,IAAP;AACD,GAZkB;AAanBC,EAAAA,SAbmB,qBAaTC,MAbS,EAaDJ,KAbC,EAaM;AACvB,QAAII,MAAM,KAAK,KAAM,CAArB,EAAyB;AACvB,YAAM,oEAAN;AACD,KAFD,MAEO,IAAIJ,KAAK,CAACI,MAAN,IAAgBA,MAApB,EAA4B;AACjC,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD,GApBkB;AAqBnBC,EAAAA,SArBmB,qBAqBTD,MArBS,EAqBDJ,KArBC,EAqBM;AACvB,QAAII,MAAM,KAAK,KAAM,CAArB,EAAyB;AACvB,YAAM,oEAAN;AACD,KAFD,MAEO,IAAIJ,KAAK,CAACI,MAAN,GAAeA,MAAnB,EAA2B;AAChC,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD,GA5BkB;AA6BnBE,EAAAA,aA7BmB,yBA6BLC,aA7BK,EA6BUP,KA7BV,EA6BiB;AAClC,WAAOO,aAAa,KAAKP,KAAzB;AACD;AA/BkB,CAArB;AAkCA,eAAeV,YAAf","sourcesContent":["'use strict';\n\nimport moment from 'moment';\n\n// Custom default rules to validate form fields\nconst defaultRules = {\n  numbers: /^(([0-9]*)|(([0-9]*)\\.([0-9]*)))$/,\n  email: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n  required: /\\S+/,\n  hasNumber: /\\d/,\n  hasUpperCase: /(?=.*[A-Z])/,\n  hasLowerCase: /(?=.*[a-z])/,\n  hasSpecialCharacter: /(\\W)/ ,\n  date(format = \"YYYY-MM-DD\", value) {\n    const d = moment(value, format);\n    if (d == null || !d.isValid()) return false;\n    return true;\n  },\n  minlength(length, value) {\n    if (length === void (0)) {\n      throw 'ERROR: It is not a valid length, checkout your minlength settings.';\n    } else if (value.length >= length) {\n      return true;\n    }\n    return false;\n  },\n  maxlength(length, value) {\n    if (length === void (0)) {\n      throw 'ERROR: It is not a valid length, checkout your maxlength settings.';\n    } else if (value.length > length) {\n      return false;\n    }\n    return true;\n  },\n  equalPassword(dataToCompare, value) {\n    return dataToCompare === value;\n  },\n};\n\nexport default defaultRules;\n"]},"metadata":{},"sourceType":"module"}